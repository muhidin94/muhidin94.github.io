{"version":3,"sources":["menu/resetviewsbutton.js","menu/ondemand.js","menu/customer.js","menu/transaction.js","menu/historytransaction.js","menu/account.js","menu/pricing.js","Dashboard.js","authProvider.js","App.js","serviceWorker.js","index.js"],"names":["ResetViewsButton","state","isOpen","handleClick","_this","setState","handleDialogClose","handleConfirm","_this$props","props","basePath","crudUpdateMany","resource","selectedIds","views","react_default","a","createElement","react","Button","label","onClick","this","Confirm","title","content","onConfirm","onClose","Component","connect","undefined","PostFilter","Filter","TextInput","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","OndBulkActionButtons","resetviewsbutton","Object","assign","BulkDeleteButton","PostList","List","filters","ondemand_PostFilter","bulkActionButtons","ondemand_OndBulkActionButtons","Responsive","small","SimpleList","primaryText","record","id","secondaryText","type","tertiaryText","quantity","medium","Datagrid","TextField","ReferenceField","RichTextField","EditButton","PostTitle","_ref","concat","PostEdit","Edit","ondemand_PostTitle","TabbedForm","FormTab","DisabledInput","esm","PostCreate","Create","SimpleForm","PostShow","Show","SimpleShowLayout","CustFilter","CustBulkActionButtons","CustomerList","customer_CustFilter","customer_CustBulkActionButtons","name","CustomerCreate","Custitle","CustEdit","customer_Custitle","transactionlist","transaction_PostFilter","Date","published_at","toLocaleDateString","EmailField","HistFilter","HistoriesTransaction","historytransaction_HistFilter","status","MyAccount","PriceFilter","PriceBulkActionButtons","PriceList","pricing_PriceFilter","pricing_PriceBulkActionButtons","price","PriceCreate","PriceTitle","PriceEdit","pricing_PriceTitle","Dashboard","Card_default","Title","CardHeader_default","style","textAlign","authProvider","params","AUTH_LOGIN","username","localStorage","setItem","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","reject","AUTH_CHECK","getItem","messages","idn","indonesianMessages","i18nProvider","locale","dataProvider","jsonServerProvider","theme","createMuiTheme","palette","primary","index","secondary","main","App","Admin","dashboard","Resource","list","edit","create","icon","PostIcon","filter","show","options","UserIcon","AddShoppingCart","MonetizationOn","AccountBox","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15c803a1.chunk.js","sourcesContent":["// in ./ResetViewsButton.js\r\nimport React, { Fragment, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Confirm, crudUpdateMany } from \"react-admin\";\r\n\r\nclass ResetViewsButton extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    const { basePath, crudUpdateMany, resource, selectedIds } = this.props;\r\n    crudUpdateMany(resource, selectedIds, { views: 0 }, basePath);\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button label=\"Reset Checklist\" onClick={this.handleClick} />\r\n        <Confirm\r\n          isOpen={this.state.isOpen}\r\n          title=\"Hilangkan Checklist\"\r\n          content=\"Apakah anda yakin hilangkan checklist yang terpilih?\"\r\n          onConfirm={this.handleConfirm}\r\n          onClose={this.handleDialogClose}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  undefined,\r\n  { crudUpdateMany }\r\n)(ResetViewsButton);\r\n","// in src/myondemand.js\r\nimport React, { Fragment } from \"react\";\r\nimport {\r\n  List,\r\n  Responsive,\r\n  SimpleList,\r\n  Edit,\r\n  Create,\r\n  Datagrid,\r\n  ReferenceField,\r\n  TextField,\r\n  EditButton,\r\n  DisabledInput,\r\n  Filter,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  TextInput,\r\n  BulkDeleteButton,\r\n  Show,\r\n  SimpleShowLayout,\r\n  RichTextField,\r\n  TabbedForm,\r\n  FormTab\r\n} from \"react-admin\";\r\nimport ResetViewsButton from \"./resetviewsbutton\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nexport const PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Cari Permintaan\" source=\"q\" alwaysOn />\r\n    <ReferenceInput source=\"customerId\" reference=\"customers\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nconst OndBulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Checklist\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nexport const PostList = props => (\r\n  <List\r\n    {...props}\r\n    filters={<PostFilter />}\r\n    bulkActionButtons={<OndBulkActionButtons />}\r\n    title=\"Permintaan\"\r\n  >\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.id}\r\n          secondaryText={record => record.type}\r\n          tertiaryText={record => record.quantity}\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <ReferenceField\r\n            label=\"Bank Sampah\"\r\n            source=\"customerId\"\r\n            reference=\"customers\"\r\n          >\r\n            <TextField source=\"name\" />\r\n          </ReferenceField>\r\n          <ReferenceField label=\"Tipe\" source=\"pricingId\" reference=\"pricings\">\r\n            <TextField source=\"name\" />\r\n          </ReferenceField>\r\n          <TextField label=\"Jumlah\" source=\"quantity\" />\r\n          <ReferenceField\r\n            label=\"Harga Satuan\"\r\n            source=\"pricingId\"\r\n            reference=\"pricings\"\r\n          >\r\n            <TextField source=\"price\" />\r\n          </ReferenceField>\r\n          <RichTextField label=\"Keterangan\" source=\"comment\" />\r\n          <EditButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nconst PostTitle = ({ record }) => {\r\n  return <span>Post {record ? `\"${record.id}\"` : \"\"}</span>;\r\n};\r\n\r\nexport const PostEdit = props => (\r\n  <Edit title={<PostTitle />} {...props}>\r\n    <TabbedForm>\r\n      <FormTab label=\"pengguna\">\r\n        <DisabledInput source=\"id\" />\r\n        <ReferenceInput\r\n          label=\"bank sampah\"\r\n          source=\"customerId\"\r\n          reference=\"customers\"\r\n        >\r\n          <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n      </FormTab>\r\n\r\n      <FormTab label=\"barang\">\r\n        <ReferenceInput label=\"harga\" source=\"pricingId\" reference=\"pricings\">\r\n          <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n        <TextInput label=\"jumlah\" source=\"quantity\" />\r\n      </FormTab>\r\n\r\n      <FormTab label=\"keterangan\">\r\n        <RichTextInput label=\"keterangan\" source=\"comment\" />\r\n      </FormTab>\r\n    </TabbedForm>\r\n  </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <ReferenceInput\r\n        label=\"bank sampah\"\r\n        source=\"customerId\"\r\n        reference=\"customers\"\r\n      >\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput label=\"harga\" source=\"pricingId\" reference=\"pricings\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput label=\"jumlah\" source=\"quantity\" />\r\n\r\n      <RichTextInput label=\"keterangan\" source=\"comment\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const PostShow = props => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <TextField source=\"id\" />\r\n      <ReferenceField\r\n        label=\"Bank sampah\"\r\n        source=\"customerId\"\r\n        reference=\"customers\"\r\n      >\r\n        <TextField source=\"name\" />\r\n      </ReferenceField>\r\n      <ReferenceField label=\"Tipe\" source=\"pricingId\" reference=\"pricings\">\r\n        <TextField source=\"name\" />\r\n      </ReferenceField>\r\n      <TextField source=\"quantity\" />\r\n      <ReferenceField\r\n        label=\"Harga Satuan\"\r\n        source=\"pricingId\"\r\n        reference=\"pricings\"\r\n      >\r\n        <TextField source=\"price\" />\r\n      </ReferenceField>\r\n      <TextField source=\"date\" />\r\n      <RichTextField source=\"comment\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n","// in src/customer.js\r\nimport React, { Fragment } from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  Responsive,\r\n  Create,\r\n  SimpleForm,\r\n  SimpleList,\r\n  TextInput,\r\n  Edit,\r\n  EditButton,\r\n  DisabledInput,\r\n  BulkDeleteButton,\r\n  Filter\r\n} from \"react-admin\";\r\nimport ResetViewsButton from \"./resetviewsbutton\";\r\n\r\nexport const CustFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Cari Pelanggan\" source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nconst CustBulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\nexport const CustomerList = props => (\r\n  <List\r\n    {...props}\r\n    filters={<CustFilter />}\r\n    bulkActionButtons={<CustBulkActionButtons />}\r\n    title=\"Bank Sampah\"\r\n  >\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.id}\r\n          secondaryText={record => record.name}\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"name\" />\r\n          <TextField source=\"email\" />\r\n          <EditButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const CustomerCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"email\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst Custitle = ({ record }) => {\r\n  return <span>Customer {record ? `\"${record.id}\"` : \"\"}</span>;\r\n};\r\nexport const CustEdit = props => (\r\n  <Edit title={<Custitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"email\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","// in src/users.js\r\nimport React from \"react\";\r\nimport {\r\n  List,\r\n  Edit,\r\n  Datagrid,\r\n  EmailField,\r\n  TextField,\r\n  Filter,\r\n  Create,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  LongTextInput,\r\n  SimpleList,\r\n  Responsive,\r\n  DisabledInput\r\n} from \"react-admin\";\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const transactionlist = props => (\r\n  <List {...props} filters={<PostFilter />} title=\"Transaksi\">\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.title}\r\n          secondaryText={record => `${record.views} views`}\r\n          tertiaryText={record =>\r\n            new Date(record.published_at).toLocaleDateString()\r\n          }\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"name\" />\r\n          <TextField source=\"username\" />\r\n          <EmailField source=\"email\" />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nconst PostTitle = ({ record }) => {\r\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\r\n};\r\nexport const PostEdit = props => (\r\n  <Edit title={<PostTitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" />\r\n      <LongTextInput source=\"body\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" />\r\n      <LongTextInput source=\"body\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  Responsive,\r\n  SimpleList,\r\n  Datagrid,\r\n  TextField,\r\n  Filter,\r\n  TextInput\r\n} from \"react-admin\";\r\n\r\nexport const HistFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Cari History\" source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const HistoriesTransaction = props => (\r\n  <List {...props} filters={<HistFilter />} title=\"Histori Transaksi\">\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.id}\r\n          secondaryText={record => record.name}\r\n          tertiaryText={record => record.status}\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"name\" />\r\n          <TextField source=\"status\" />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n","// in src/posts.js\r\nimport React from \"react\";\r\nimport { List, Datagrid, TextField } from \"react-admin\";\r\n\r\nexport const MyAccount = props => (\r\n  <List {...props} title=\"Akun Saya\">\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"title\" />\r\n      <TextField source=\"body\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  SimpleList,\r\n  TextField,\r\n  EditButton,\r\n  Filter,\r\n  TextInput,\r\n  Responsive,\r\n  BulkDeleteButton,\r\n  Create,\r\n  SimpleForm,\r\n  Edit,\r\n  DisabledInput\r\n} from \"react-admin\";\r\nimport ResetViewsButton from \"./resetviewsbutton\";\r\n\r\nexport const PriceFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Cari Sampah\" source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nconst PriceBulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\nexport const PriceList = props => (\r\n  <List\r\n    {...props}\r\n    filters={<PriceFilter />}\r\n    bulkActionButtons={<PriceBulkActionButtons />}\r\n    title=\"Harga Sampah\"\r\n  >\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.id}\r\n          secondaryText={record => record.name}\r\n          tertiaryText={record => record.price}\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"name\" />\r\n          <TextField source=\"price\" />\r\n          <EditButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const PriceCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"price\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst PriceTitle = ({ record }) => {\r\n  return <span>Customer {record ? `\"${record.id}\"` : \"\"}</span>;\r\n};\r\nexport const PriceEdit = props => (\r\n  <Edit title={<PriceTitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"price\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","// in src/Dashboard.js\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Title } from \"react-admin\";\r\nexport default () => (\r\n  <Card>\r\n    <Title title=\"Dashboard\" />\r\n    <CardHeader\r\n      style={{ textAlign: \"center\" }}\r\n      title=\"Selamat Datang Di Tampah Buyer\"\r\n    />\r\n  </Card>\r\n);\r\n","// in src/authProvider.js\r\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from \"react-admin\";\r\n\r\nexport default (type, params) => {\r\n  // called when the user attempts to log in\r\n  if (type === AUTH_LOGIN) {\r\n    const { username } = params;\r\n    localStorage.setItem(\"username\", username);\r\n    // accept all username/password combinations\r\n    return Promise.resolve();\r\n  }\r\n  // called when the user clicks on the logout button\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"username\");\r\n    return Promise.resolve();\r\n  }\r\n  // called when the API returns an error\r\n  if (type === AUTH_ERROR) {\r\n    const { status } = params;\r\n    if (status === 401 || status === 403) {\r\n      localStorage.removeItem(\"username\");\r\n      return Promise.reject();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  // called when the user navigates to a new location\r\n  if (type === AUTH_CHECK) {\r\n    return localStorage.getItem(\"username\")\r\n      ? Promise.resolve()\r\n      : Promise.reject();\r\n  }\r\n  return Promise.reject(\"Unknown method\");\r\n};\r\n","// in src/App.js\nimport React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\n\nimport {\n  PostList,\n  PostEdit,\n  PostCreate,\n  PostFilter,\n  PostShow\n} from \"./menu/ondemand\";\nimport {\n  CustomerList,\n  CustomerCreate,\n  CustEdit,\n  CustFilter\n} from \"./menu/customer\";\nimport { transactionlist } from \"./menu/transaction\";\nimport { HistoriesTransaction, HistFilter } from \"./menu/historytransaction\";\nimport { MyAccount } from \"./menu/account\";\nimport { PriceList, PriceCreate, PriceFilter, PriceEdit } from \"./menu/pricing\";\n\nimport Dashboard from \"./Dashboard\";\nimport authProvider from \"./authProvider\";\nimport jsonServerProvider from \"ra-data-json-server\";\n//import simpleRestProvider from \"ra-data-json-server\";\n//import dataProvider from './dataProvider';\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport index from \"@material-ui/core/colors/index\";\nimport PostIcon from \"@material-ui/icons/Book\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport AddShoppingCart from \"@material-ui/icons/AddShoppingCart\";\nimport List from \"@material-ui/icons/List\";\nimport AccountBox from \"@material-ui/icons/AccountBox\";\nimport MonetizationOn from \"@material-ui/icons/MonetizationOn\";\nimport indonesianMessages from \"ra-language-indonesian\";\n\nconst messages = {\n  idn: indonesianMessages\n};\nconst i18nProvider = locale => messages[locale];\n\nconst dataProvider = jsonServerProvider(\n  //\"https://my-json-server.typicode.com/muhidin94/jsonserver\"\n  \"http://localhost:3000\"\n);\nconst theme = createMuiTheme({\n  palette: {\n    primary: index,\n    secondary: {\n      main: \"#0087ff\"\n    }\n  }\n});\nconst App = () => (\n  <Admin\n    title\n    theme={theme}\n    dashboard={Dashboard}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n    locale=\"idn\"\n    i18nProvider={i18nProvider}\n  >\n    <Resource\n      name=\"ondemands\"\n      list={PostList}\n      edit={PostEdit}\n      create={PostCreate}\n      icon={PostIcon}\n      filter={PostFilter}\n      show={PostShow}\n      options={{ label: \"Permintaan\" }}\n    />\n    <Resource\n      name=\"customers\"\n      list={CustomerList}\n      icon={UserIcon}\n      create={CustomerCreate}\n      edit={CustEdit}\n      filter={CustFilter}\n      options={{ label: \"Bank Sampah\" }}\n    />\n    <Resource\n      name=\"transactions\"\n      list={transactionlist}\n      icon={AddShoppingCart}\n      options={{ label: \"Transaksi\" }}\n    />\n    <Resource\n      name=\"histories\"\n      list={HistoriesTransaction}\n      icon={List}\n      filter={HistFilter}\n      options={{ label: \"Historis\" }}\n    />\n    <Resource\n      name=\"pricings\"\n      list={PriceList}\n      filter={PriceFilter}\n      create={PriceCreate}\n      icon={MonetizationOn}\n      edit={PriceEdit}\n      options={{ label: \"Harga\" }}\n    />\n    <Resource\n      name=\"account\"\n      list={MyAccount}\n      icon={AccountBox}\n      options={{ label: \"Akun\" }}\n    />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}