{"version":3,"sources":["ResetViewsButton.js","posts.js","users.js","components/BarChart.js","components/SimpleLineChart.js","components/SyncChart.js","components/Pie.js","components/ScatterChart.js","components/CustomChart.js","Dashboard.js","authProvider.js","App.js","serviceWorker.js","index.js"],"names":["ResetViewsButton","handleClick","_this$props","_this","props","basePath","resource","selectedIds","startUndoable","crudUpdateMany","views","react_default","a","createElement","Button","label","onClick","this","Component","connect","undefined","PostFilter","Filter","TextInput","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","PostBulkActionButtons","react","src_ResetViewsButton","Object","assign","BulkDeleteButton","PostActions","_ref","bulkActions","currentSort","displayedFilters","exporter","filters","filterValues","onUnselectItems","showFilter","CardActions","React","cloneElement","context","CreateButton","ExportButton","sort","filter","RefreshButton","PostList","List","posts_PostFilter","bulkActionButtons","posts_PostBulkActionButtons","actions","posts_PostActions","Responsive","small","SimpleList","primaryText","record","title","secondaryText","concat","tertiaryText","Date","published_at","toLocaleDateString","linkType","medium","Datagrid","TextField","ReferenceField","EditButton","PostTitle","_ref2","PostEdit","Edit","posts_PostTitle","SimpleForm","DisabledInput","LongTextInput","PostCreate","Create","PostShow","Show","SimpleShowLayout","RichTextField","UserList","users_PostBulkActionButtons","users_PostActions","EmailField","data","name","Jakarta","Bekasi","Bogor","barChart","ResponsiveContainer","width","height","BarChart","XAxis","dataKey","stroke","YAxis","Tooltip","wrapperStyle","backgroundColor","Legend","top","right","border","borderRadius","lineHeight","CartesianGrid","strokeDasharray","Bar","type","fill","barSize","SimpleLineChart","ResponsiveContainer_default","LineChart_default","XAxis_default","YAxis_default","CartesianGrid_default","vertical","Tooltip_default","Legend_default","Line_default","uv","pv","SyncChart","chart_LineChart","syncId","margin","left","bottom","cartesian_Line","Brush","AreaChart","Area","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","SimplePieChart","PieChart","Pie","labelLine","map","entry","Cell","length","z","SimpleScatterChart","ScatterChart","unit","Scatter","cursor","amt","LineBarAreaComposedChart","ComposedChart","withStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","classes","className","Grid_default","container","item","xs","Paper_default","components_SimpleLineChart","components_BarChart","components_Pie","components_ScatterChart","components_SyncChart","CustomChart","authProvider","params","AUTH_LOGIN","username","localStorage","setItem","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","status","reject","AUTH_CHECK","getItem","messages","ind","indonesianMessages","i18nProvider","locale","dataProvider","jsonServerProvider","App","Admin","dashboard","Dashboard","Resource","show","list","edit","create","icon","PostIcon","UserIcon","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae6194de.chunk.js","sourcesContent":["// in ./ResetViewsButton.js\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, crudUpdateMany, startUndoable } from \"react-admin\";\r\n\r\nclass ResetViewsButton extends Component {\r\n  handleClick = () => {\r\n    const { basePath, resource, selectedIds, startUndoable } = this.props;\r\n    startUndoable(\r\n      crudUpdateMany(resource, selectedIds, { views: 0 }, basePath)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <Button label=\"Reset Views\" onClick={this.handleClick} />;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  undefined,\r\n  { startUndoable }\r\n)(ResetViewsButton);\r\n","// in src/posts.js\r\nimport React, { Fragment } from \"react\";\r\nimport ResetViewsButton from \"./ResetViewsButton\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport {\r\n  List,\r\n  Edit,\r\n  Create,\r\n  Datagrid,\r\n  ReferenceField,\r\n  TextField,\r\n  EditButton,\r\n  DisabledInput,\r\n  LongTextInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  TextInput,\r\n  Filter,\r\n  ReferenceInput,\r\n  SimpleList,\r\n  Responsive,\r\n  Show,\r\n  SimpleShowLayout,\r\n  RichTextField,\r\n  BulkDeleteButton,\r\n  CardActions,\r\n  CreateButton,\r\n  ExportButton,\r\n  RefreshButton\r\n} from \"react-admin\";\r\n\r\nconst PostFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\nconst PostBulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nconst PostActions = ({\r\n  bulkActions,\r\n  basePath,\r\n  currentSort,\r\n  displayedFilters,\r\n  exporter,\r\n  filters,\r\n  filterValues,\r\n  onUnselectItems,\r\n  resource,\r\n  selectedIds,\r\n  showFilter\r\n}) => (\r\n  <CardActions>\r\n    {bulkActions &&\r\n      React.cloneElement(bulkActions, {\r\n        basePath,\r\n        filterValues,\r\n        resource,\r\n        selectedIds,\r\n        onUnselectItems\r\n      })}\r\n    {filters &&\r\n      React.cloneElement(filters, {\r\n        resource,\r\n        showFilter,\r\n        displayedFilters,\r\n        filterValues,\r\n        context: \"button\"\r\n      })}\r\n    <CreateButton basePath={basePath} />\r\n    <ExportButton\r\n      resource={resource}\r\n      sort={currentSort}\r\n      filter={filterValues}\r\n      exporter={exporter}\r\n    />\r\n    <RefreshButton />\r\n    {/* Add your custom actions */}\r\n    {/* <Button primary onClick={customAction}>\r\n      Custom Action\r\n    </Button> */}\r\n  </CardActions>\r\n);\r\n\r\nexport const PostList = props => (\r\n  <List\r\n    {...props}\r\n    filters={<PostFilter />}\r\n    bulkActionButtons={<PostBulkActionButtons />}\r\n    actions={<PostActions />}\r\n  >\r\n    <Responsive\r\n      small={\r\n        <SimpleList\r\n          primaryText={record => record.title}\r\n          secondaryText={record => `${record.views} views`}\r\n          tertiaryText={record =>\r\n            new Date(record.published_at).toLocaleDateString()\r\n          }\r\n          linkType=\"show\"\r\n        />\r\n      }\r\n      medium={\r\n        <Datagrid>\r\n          <TextField source=\"id\" label=\"Id\" />\r\n          <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\r\n            <TextField source=\"name\" label=\"Nama\" />\r\n          </ReferenceField>\r\n          <TextField source=\"title\" label=\"Judul\" />\r\n          <TextField source=\"body\" label=\"Isi\" />\r\n          <EditButton />\r\n        </Datagrid>\r\n      }\r\n    />\r\n  </List>\r\n);\r\n\r\nconst PostTitle = ({ record }) => {\r\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\r\n};\r\n\r\nexport const PostEdit = props => (\r\n  <Edit title={<PostTitle />} {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" label=\"Id\" />\r\n      <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" label=\"Judul\" />\r\n      <LongTextInput source=\"body\" label=\"Isi\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" label=\"Judul\" />\r\n      <LongTextInput source=\"body\" label=\"Isi\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const PostShow = props => (\r\n  <Show title={<PostTitle />} {...props}>\r\n    <SimpleShowLayout>\r\n      <TextField source=\"title\" label=\"Judul\" />\r\n      <RichTextField source=\"body\" label=\"Isi\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n","// in src/users.js\r\nimport React, { Fragment } from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  EmailField,\r\n  TextField,\r\n  BulkDeleteButton,\r\n  CardActions,\r\n  // CreateButton,\r\n  ExportButton,\r\n  RefreshButton\r\n} from \"react-admin\";\r\nimport ResetViewsButton from \"./ResetViewsButton\";\r\n\r\nconst PostBulkActionButtons = props => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* Add the default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nconst PostActions = ({\r\n  bulkActions,\r\n  basePath,\r\n  currentSort,\r\n  displayedFilters,\r\n  exporter,\r\n  filters,\r\n  filterValues,\r\n  onUnselectItems,\r\n  resource,\r\n  selectedIds,\r\n  showFilter\r\n}) => (\r\n  <CardActions>\r\n    {bulkActions &&\r\n      React.cloneElement(bulkActions, {\r\n        basePath,\r\n        filterValues,\r\n        resource,\r\n        selectedIds,\r\n        onUnselectItems\r\n      })}\r\n    {filters &&\r\n      React.cloneElement(filters, {\r\n        resource,\r\n        showFilter,\r\n        displayedFilters,\r\n        filterValues,\r\n        context: \"button\"\r\n      })}\r\n    {/* <CreateButton basePath={basePath} /> */}\r\n    <ExportButton\r\n      resource={resource}\r\n      sort={currentSort}\r\n      filter={filterValues}\r\n      exporter={exporter}\r\n    />\r\n    <RefreshButton />\r\n    {/* Add your custom actions */}\r\n    {/* <Button primary onClick={customAction}>Custom Action</Button> */}\r\n  </CardActions>\r\n);\r\n\r\nexport const UserList = props => (\r\n  <List\r\n    {...props}\r\n    bulkActionButtons={<PostBulkActionButtons />}\r\n    actions={<PostActions />}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"id\" label=\"Id\" />\r\n      <TextField source=\"name\" label=\"Nama Lengkap\" />\r\n      <TextField source=\"username\" label=\"Nama Pengguna\" />\r\n      <EmailField source=\"email\" label=\"Email\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"1\", Jakarta: 24, Bekasi: 12, Bogor: 15 },\r\n  { name: \"2\", Jakarta: 78, Bekasi: 56, Bogor: 61 },\r\n  { name: \"3\", Jakarta: 120, Bekasi: 97, Bogor: 112 },\r\n  { name: \"4\", Jakarta: 180, Bekasi: 147, Bogor: 156 }\r\n];\r\n\r\nfunction barChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height={200}>\r\n      <BarChart data={data}>\r\n        <XAxis dataKey=\"name\" stroke=\"#8884d8\" />\r\n        <YAxis />\r\n        <Tooltip wrapperStyle={{ width: 100, backgroundColor: \"#ccc\" }} />\r\n        <Legend\r\n          width={100}\r\n          wrapperStyle={{\r\n            top: 140,\r\n            right: 20,\r\n            backgroundColor: \"#f5f5f5\",\r\n            border: \"1px solid #d5d5d5\",\r\n            borderRadius: 3,\r\n            lineHeight: \"20px\"\r\n          }}\r\n        />\r\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n        <Bar type=\"monotone\" dataKey=\"Jakarta\" fill=\"#82ca9d\" barSize={30} />\r\n        <Bar type=\"monotone\" dataKey=\"Bekasi\" fill=\"#8884d8\" barSize={30} />\r\n        <Bar type=\"monotone\" dataKey=\"Bogor\" fill=\"#eb8473\" barSize={30} />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default barChart;\r\n","import React from \"react\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nimport LineChart from \"recharts/lib/chart/LineChart\";\r\nimport Line from \"recharts/lib/cartesian/Line\";\r\nimport XAxis from \"recharts/lib/cartesian/XAxis\";\r\nimport YAxis from \"recharts/lib/cartesian/YAxis\";\r\nimport CartesianGrid from \"recharts/lib/cartesian/CartesianGrid\";\r\nimport Tooltip from \"recharts/lib/component/Tooltip\";\r\nimport Legend from \"recharts/lib/component/Legend\";\r\n\r\nconst data = [\r\n  { name: \"Mon\", Jakarta: 44000, Bekasi: 28000, Bogor: 25000 },\r\n  { name: \"Tue\", Jakarta: 12800, Bekasi: 23980, Bogor: 21000 },\r\n  { name: \"Wed\", Jakarta: 55000, Bekasi: 43000, Bogor: 38000 },\r\n  { name: \"Thu\", Jakarta: 43800, Bekasi: 29080, Bogor: 15000 },\r\n  { name: \"Fri\", Jakarta: 58900, Bekasi: 28000, Bogor: 11000 },\r\n  { name: \"Sat\", Jakarta: 53900, Bekasi: 38000, Bogor: 28000 },\r\n  { name: \"Sun\", Jakarta: 48900, Bekasi: 41000, Bogor: 38000 }\r\n];\r\n\r\nfunction SimpleLineChart() {\r\n  return (\r\n    // 99% per https://github.com/recharts/recharts/issues/172\r\n    <ResponsiveContainer width=\"99%\" height={150}>\r\n      <LineChart data={data}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"Jakarta\" stroke=\"#82ca9d\" />\r\n        <Line type=\"monotone\" dataKey=\"Bekasi\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"Bogor\" stroke=\"#eb8473  \" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default SimpleLineChart;\r\n ","import {\r\n  LineChart,\r\n  Line,\r\n  AreaChart,\r\n  Area,\r\n  Brush,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from \"recharts\";\r\nimport React from \"react\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\n\r\nconst data = [\r\n  { name: \"Page A\", uv: 4000, pv: 9000 },\r\n  { name: \"Page B\", uv: 3000, pv: 7222 },\r\n  { name: \"Page C\", uv: 2000, pv: 6222 },\r\n  { name: \"Page D\", uv: 1223, pv: 5400 },\r\n  { name: \"Page E\", uv: 1890, pv: 3200 },\r\n  { name: \"Page F\", uv: 2390, pv: 2500 },\r\n  { name: \"Page G\", uv: 3490, pv: 1209 }\r\n];\r\n\r\nfunction SyncChart() {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"99%\">\r\n      <div>\r\n        <h4>A demo of synchronized AreaCharts</h4>\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          syncId=\"anyId\"\r\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n        </LineChart>\r\n        <p>Maybe some other content</p>\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          syncId=\"anyId\"\r\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\r\n          <Brush />\r\n        </LineChart>\r\n        <AreaChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          syncId=\"anyId\"\r\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\r\n        </AreaChart>\r\n      </div>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default SyncChart;\r\n","import { PieChart, Pie, Cell } from \"recharts\";\r\nimport React from \"react\";\r\n\r\nconst data = [\r\n  { name: \"Group A\", value: 400 },\r\n  { name: \"Group B\", value: 300 },\r\n  { name: \"Group C\", value: 300 },\r\n  { name: \"Group D\", value: 200 }\r\n];\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nfunction SimplePieChart() {\r\n  return (\r\n    <PieChart width={800} height={200}>\r\n      <Pie\r\n        data={data}\r\n        cx={100}\r\n        cy={100}\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n      >\r\n        {data.map((entry, index) => (\r\n          <Cell fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n      </Pie>\r\n    </PieChart>\r\n  );\r\n}\r\n\r\nexport default SimplePieChart;\r\n","import {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from \"recharts\";\r\nimport React from \"react\";\r\n\r\nconst data = [\r\n  { x: 100, y: 200, z: 200 },\r\n  { x: 120, y: 100, z: 260 },\r\n  { x: 170, y: 300, z: 400 },\r\n  { x: 140, y: 250, z: 280 },\r\n  { x: 150, y: 400, z: 500 },\r\n  { x: 110, y: 280, z: 200 }\r\n];\r\n\r\nfunction SimpleScatterChart() {\r\n  return (\r\n    <ScatterChart\r\n      width={200}\r\n      height={200}\r\n      margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n    >\r\n      <CartesianGrid />\r\n      <XAxis dataKey={\"x\"} type=\"number\" name=\"stature\" unit=\"cm\" />\r\n      <YAxis dataKey={\"y\"} type=\"number\" name=\"weight\" unit=\"kg\" />\r\n      <Scatter name=\"A school\" data={data} fill=\"#8884d8\" />\r\n      <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n    </ScatterChart>\r\n  );\r\n}\r\n\r\nexport default SimpleScatterChart;\r\n","import React from \"react\";\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"Page A\", uv: 590, pv: 800, amt: 1400 },\r\n  { name: \"Page B\", uv: 868, pv: 967, amt: 1506 },\r\n  { name: \"Page C\", uv: 1397, pv: 1098, amt: 989 },\r\n  { name: \"Page D\", uv: 1480, pv: 1200, amt: 1228 },\r\n  { name: \"Page E\", uv: 1520, pv: 1108, amt: 1100 },\r\n  { name: \"Page F\", uv: 1400, pv: 680, amt: 1700 }\r\n];\r\n\r\nfunction LineBarAreaComposedChart() {\r\n  return (\r\n    <ComposedChart width={500} height={300} data={data}>\r\n      <CartesianGrid stroke=\"#f5f5f5\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n      <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n    </ComposedChart>\r\n  );\r\n}\r\n\r\nexport default LineBarAreaComposedChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport BarChart from \"./components/BarChart\";\r\nimport SimpleLineChart from \"./components/SimpleLineChart\";\r\nimport SyncChart from \"./components/SyncChart\";\r\nimport SimplePieChart from \"./components/Pie\";\r\nimport SimpleScatterChart from \"./components/ScatterChart\";\r\nimport LineBarAreaComposedChart from \"./components/CustomChart\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n});\r\n\r\nfunction CenteredGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Data (1) <SimpleLineChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            Data (2) <BarChart />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            Data (3) <SimplePieChart />{\" \"}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            Data (4) <SimpleScatterChart />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Data (5)</Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Data (6) <SyncChart />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Data (7) <LineBarAreaComposedChart />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCenteredGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CenteredGrid);\r\n","// in src/authProvider.js\r\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from \"react-admin\";\r\n\r\nexport default (type, params) => {\r\n  // called when the user attempts to log in\r\n  if (type === AUTH_LOGIN) {\r\n    const { username } = params;\r\n    localStorage.setItem(\"username\", username);\r\n    // accept all username/password combinations\r\n    return Promise.resolve();\r\n  }\r\n  // called when the user clicks on the logout button\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"username\");\r\n    return Promise.resolve();\r\n  }\r\n  // called when the API returns an error\r\n  if (type === AUTH_ERROR) {\r\n    const { status } = params;\r\n    if (status === 401 || status === 403) {\r\n      localStorage.removeItem(\"username\");\r\n      return Promise.reject();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  // called when the user navigates to a new location\r\n  if (type === AUTH_CHECK) {\r\n    return localStorage.getItem(\"username\")\r\n      ? Promise.resolve()\r\n      : Promise.reject();\r\n  }\r\n  return Promise.reject(\"Unknown method\");\r\n};\r\n","// in src/App.js\nimport React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport { PostList, PostEdit, PostCreate, PostShow } from \"./posts\";\nimport { UserList } from \"./users\";\nimport PostIcon from \"@material-ui/icons/Book\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport Dashboard from \"./Dashboard\";\nimport authProvider from \"./authProvider\";\n// import dataProvider from './dataProvider';\nimport indonesianMessages from \"ra-language-indonesian\";\n\nconst messages = {\n  ind: indonesianMessages\n};\nconst i18nProvider = locale => messages[locale];\n\nconst dataProvider = jsonServerProvider(\"http://jsonplaceholder.typicode.com\");\nconst App = () => (\n  <Admin\n    dashboard={Dashboard}\n    dataProvider={dataProvider}\n    authProvider={authProvider}\n    locale=\"ind\"\n    i18nProvider={i18nProvider}\n  >\n    <Resource\n      name=\"posts\"\n      show={PostShow}\n      list={PostList}\n      edit={PostEdit}\n      create={PostCreate}\n      icon={PostIcon}\n    />\n    <Resource name=\"users\" list={UserList} icon={UserIcon} />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}